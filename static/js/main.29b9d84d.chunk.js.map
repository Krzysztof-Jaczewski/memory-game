{"version":3,"sources":["lights.png","GlobalStyle.js","components/Board/styled.js","components/SingleCard/images/cardBack.jpg","components/SingleCard/images/snowman.png","components/SingleCard/images/candy.png","components/SingleCard/images/cookie.png","components/SingleCard/images/gift.png","components/SingleCard/images/santa.png","components/SingleCard/images/sock.png","components/SingleCard/images/tree.png","components/SingleCard/images/snowflake.png","components/SingleCard/cardsArray.js","components/SingleCard/images/mistletoe.png","components/SingleCard/images/christmasBall.png","components/SingleCard/images/wreath.png","components/SingleCard/images/candle.png","components/gameSlice.js","components/SingleCard/styled.js","components/SingleCard/index.js","scoreLocalStorage.js","components/Score/style.js","components/Score/index.js","components/Board/index.js","components/Buttons/Button/styled.js","components/Buttons/Button/images/snowCap.svg","components/Buttons/Button/images/snowCap-2.svg","components/Buttons/Button/images/icicle.svg","components/Buttons/Button/images/sideSnow.svg","components/Buttons/Button/index.js","components/Buttons/styled.js","components/Buttons/index.js","components/Title/styled.js","components/Title/index.js","App.js","store.js","index.js"],"names":["GlobalStyle","createGlobalStyle","lights","MainContent","styled","main","expert","css","StyledBoard","section","Turns","p","cardsArray","src","snowman","candy","coockie","gift","santa","sock","tree","snowflake","gameSlice","createSlice","name","initialState","cards","turns","status","difficulty","choiceOne","choiceTwo","disable","cardBack","cardImages","reducers","startNewGame","state","value","payload","shuffledCards","slice","concat","sort","Math","random","map","card","matched","id","nanoid","changeStatus","newStatus","setDifficulty","chosenDifficulty","handleChoice","resetChoice","updateCards","srcOne","srcTwo","setDisableTrue","actions","selectCardsState","selectCards","selectTurns","selectStatus","selectDifficulty","selectCardBack","selectChoiceOne","selectChoiceTwo","selectDisable","selectIsEveryCardMatched","every","StyledCard","div","CardBack","img","flipped","CardFront","SingleCard","useSelector","isCardFlipped","selectIsCardFlipped","dispatch","useDispatch","alt","onClick","getScoreFromLocalStorage","text","JSON","parse","localStorage","getItem","ScoreBoard","Header","header","Text","Score","Board","isEveryCardMatched","useEffect","setTimeout","bestScore","score","setItem","stringify","ButtonLabel","StyledButton","button","Image","Button","type","task","children","FirstsnowCap","SecondSnowCap","Icecle","SideSnow","Difficulty","Buttons","console","log","StyledTitle","h1","Title","App","store","configureStore","reducer","cardsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29b9d84d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lights.a9d822ef.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport lights from \"./lights.png\";\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n  margin: 0;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\nbody {\r\n  height: 90vh;\r\n  font-family: 'Lato', sans-serif;\r\n  background-image: url(${lights}),linear-gradient(180deg, rgba(2,0,36,1) 0%, rgba(0,0,8,1) 84%, rgba(8,8,172,1) 100%, rgba(0,212,255,1) 100%);\r\n  background-size: 100% 100%;\r\n  background-attachment: fixed;\r\n  background-repeat: no-repeat;\r\n}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const MainContent = styled.main`\r\n  max-width: 660px;\r\n  margin: 0 auto 40px;\r\n  padding: 0 30px;\r\n  z-index: 1;\r\n  ${({ expert }) =>\r\n    expert &&\r\n    css`\r\n      max-width: 1000px;\r\n    `}\r\n`;\r\n\r\nexport const StyledBoard = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 16px;\r\n  position: relative;\r\n  @media (max-width: 667px) {\r\n    gap: 8px;\r\n  }\r\n  ${({ expert }) =>\r\n    expert &&\r\n    css`\r\n      grid-template-columns: repeat(6, 1fr);\r\n      gap: 16px;\r\n    `}\r\n`;\r\n\r\nexport const Turns = styled.p`\r\n  text-align: center;\r\n  padding: 16px;\r\n  color: rgb(255, 0, 0);\r\n  font-size: clamp(22px, 4vw, 36px); ;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/cardBack.7852abab.jpg\";","export default __webpack_public_path__ + \"static/media/snowman.900c36da.png\";","export default __webpack_public_path__ + \"static/media/candy.4dfc5341.png\";","export default __webpack_public_path__ + \"static/media/cookie.4d8e8970.png\";","export default __webpack_public_path__ + \"static/media/gift.33c31d23.png\";","export default __webpack_public_path__ + \"static/media/santa.d080bc57.png\";","export default __webpack_public_path__ + \"static/media/sock.c3b8f7b1.png\";","export default __webpack_public_path__ + \"static/media/tree.035170c0.png\";","export default __webpack_public_path__ + \"static/media/snowflake.a3d82073.png\";","import snowman from \"./images/snowman.png\";\r\nimport candy from \"./images/candy.png\";\r\nimport coockie from \"./images/cookie.png\";\r\nimport gift from \"./images/gift.png\";\r\nimport santa from \"./images/santa.png\";\r\nimport sock from \"./images/sock.png\";\r\nimport tree from \"./images/tree.png\";\r\nimport snowflake from \"./images/snowflake.png\";\r\nimport mistletoe from \"./images/mistletoe.png\";\r\nimport christmasBall from \"./images/christmasBall.png\";\r\nimport wreath from \"./images/wreath.png\";\r\nimport candle from \"./images/candle.png\";\r\n\r\nexport const cardsArray = [\r\n  { src: mistletoe },\r\n  { src: christmasBall },\r\n  { src: wreath },\r\n  { src: candle },\r\n  { src: snowman },\r\n  { src: candy },\r\n  { src: coockie },\r\n  { src: gift },\r\n  { src: santa },\r\n  { src: sock },\r\n  { src: tree },\r\n  { src: snowflake },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/mistletoe.d8f6d9c3.png\";","export default __webpack_public_path__ + \"static/media/christmasBall.093d2654.png\";","export default __webpack_public_path__ + \"static/media/wreath.7bd71d09.png\";","export default __webpack_public_path__ + \"static/media/candle.1637c6b1.png\";","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\r\nimport cardBack from \"./SingleCard/images/cardBack.jpg\";\r\nimport { cardsArray } from \"./SingleCard/cardsArray\";\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"cards\",\r\n  initialState: {\r\n    cards: [],\r\n    turns: 0,\r\n    status: \"initial\",\r\n    difficulty: null,\r\n    choiceOne: null,\r\n    choiceTwo: null,\r\n    disable: false,\r\n    cardBack: { src: cardBack },\r\n    cardImages: cardsArray,\r\n  },\r\n  reducers: {\r\n    startNewGame: (state, { payload: value }) => {\r\n      const shuffledCards = state.cardImages\r\n        .slice(value)\r\n        .concat(state.cardImages.slice(value))\r\n        .sort(() => Math.random() - 0.5)\r\n        .map((card) => ({\r\n          src: card.src,\r\n          matched: false,\r\n          id: nanoid(),\r\n        }));\r\n\r\n      if (value === 6) {\r\n        state.difficulty = \"beginner\";\r\n      }\r\n      if (value === 4) {\r\n        state.difficulty = \"advanced\";\r\n      }\r\n      if (value === 0) {\r\n        state.difficulty = \"expert\";\r\n      }\r\n\r\n      state.cards = shuffledCards;\r\n      state.turns = 0;\r\n      state.status = \"inGame\";\r\n      state.choiceOne = null;\r\n      state.choiceTwo = null;\r\n    },\r\n\r\n    changeStatus: (state, { payload: newStatus }) => {\r\n      state.status = newStatus;\r\n    },\r\n\r\n    setDifficulty: (state, { payload: chosenDifficulty }) => {\r\n      state.difficulty = chosenDifficulty;\r\n    },\r\n\r\n    handleChoice: (state, { payload: card }) => {\r\n      state.choiceOne\r\n        ? (state.choiceTwo = card)\r\n        : (state.choiceOne = card);\r\n    },\r\n\r\n    resetChoice: (state) => {\r\n      state.choiceTwo = null;\r\n      state.choiceOne = null;\r\n      state.turns += 1;\r\n      state.disable = false;\r\n    },\r\n\r\n    updateCards: (state, { payload: srcOne, srcTwo }) => {\r\n      state.cards.map((card) => {\r\n        if (card.src === srcOne) return (card.matched = true);\r\n        if (card.src === srcTwo) return (card.matched = true);\r\n        else return card;\r\n      });\r\n    },\r\n\r\n    setDisableTrue: (state) => {\r\n      state.disable = true;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  startNewGame,\r\n  handleChoice,\r\n  resetChoice,\r\n  updateCards,\r\n  setDisableTrue,\r\n  changeStatus,\r\n  setDifficulty,\r\n} = gameSlice.actions;\r\n\r\nexport const selectCardsState = (state) => state.cards;\r\nexport const selectCards = (state) => selectCardsState(state).cards;\r\nexport const selectTurns = (state) => selectCardsState(state).turns;\r\nexport const selectStatus = (state) => selectCardsState(state).status;\r\nexport const selectDifficulty = (state) =>\r\n  selectCardsState(state).difficulty;\r\nexport const selectCardBack = (state) =>\r\n  selectCardsState(state).cardBack;\r\n\r\nexport const selectChoiceOne = (state) =>\r\n  selectCardsState(state).choiceOne;\r\nexport const selectChoiceTwo = (state) =>\r\n  selectCardsState(state).choiceTwo;\r\n\r\nexport const selectDisable = (state) =>\r\n  selectCardsState(state).disable;\r\n\r\nexport const selectIsCardFlipped = (state, card) => {\r\n  const choiceOne = selectChoiceOne(state);\r\n  const choiceTwo = selectChoiceTwo(state);\r\n\r\n  return card === choiceOne || card === choiceTwo || card.matched;\r\n};\r\nexport const selectIsEveryCardMatched = (state) =>\r\n  selectCards(state).every(({ matched }) => matched);\r\n\r\nexport default gameSlice.reducer;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const CardBack = styled.img`\r\n  width: 100%;\r\n  display: block;\r\n\r\n  border-radius: 6px;\r\n  background-image: radial-gradient(black, green);\r\n  cursor: pointer;\r\n  transition: all ease-in 0.2s;\r\n  transition-delay: 0.2s;\r\n  box-shadow: 2px 2px 3px rgb(60, 60, 60),\r\n    -2px -2px 3px rgb(150, 255, 150),\r\n    inset -1.5px -1.5px 3px rgb(150, 255, 150),\r\n    inset 1.5px 1.5px 3px rgb(0, 0, 0);\r\n\r\n  ${({ flipped }) =>\r\n    flipped &&\r\n    css`\r\n      transform: rotateY(90deg);\r\n      transition-delay: 0s;\r\n    `}\r\n`;\r\n\r\nexport const CardFront = styled(CardBack)`\r\n  transform: rotateY(90deg);\r\n  position: absolute;\r\n  transition: all ease-in 0.2s;\r\n  cursor: not-allowed;\r\n\r\n  ${({ flipped }) =>\r\n    flipped &&\r\n    css`\r\n      transform: rotateY(0deg);\r\n      transition-delay: 0.2s;\r\n    `}\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  handleChoice,\r\n  selectCardBack,\r\n  selectDisable,\r\n  selectIsCardFlipped,\r\n} from \"../gameSlice\";\r\nimport { CardFront, CardBack, StyledCard } from \"./styled\";\r\n\r\nexport const SingleCard = ({ card }) => {\r\n  const cardBack = useSelector(selectCardBack);\r\n\r\n  const disable = useSelector(selectDisable);\r\n  const isCardFlipped = useSelector((state) =>\r\n    selectIsCardFlipped(state, card)\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    if (!disable) {\r\n      dispatch(handleChoice(card));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledCard>\r\n      <CardFront\r\n        flipped={isCardFlipped}\r\n        src={card.src}\r\n        alt=\"card front\"\r\n      />\r\n      <CardBack\r\n        flipped={isCardFlipped}\r\n        disable={disable}\r\n        src={cardBack.src}\r\n        alt=\"card back\"\r\n        onClick={handleClick}\r\n      />\r\n    </StyledCard>\r\n  );\r\n};\r\n","export const saveScoreInLocalStorage = (score, text) =>\r\n  localStorage.setItem(text, JSON.stringify(score));\r\n\r\nexport const getScoreFromLocalStorage = (text) =>\r\n  JSON.parse(localStorage.getItem(text)) || \"no score yet\";\r\n","import styled from \"styled-components\";\r\n\r\nexport const ScoreBoard = styled.section`\r\n  position: absolute;\r\n  width: 80%;\r\n  left: 10%;\r\n  top: 10%;\r\n  padding: 16px 8px;\r\n  background-color: rgba(0, 0, 100, 0.9);\r\n  z-index: 1;\r\n  display: grid;\r\n  place-items: center;\r\n  color: red;\r\n  font-weight: bold;\r\n  border-radius: 20px;\r\n  box-shadow: 6px 6px 10px rgb(0, 0, 0),\r\n    -4px -4px 2px rgb(150, 150, 255),\r\n    inset -2px -2px 2px rgb(150, 150, 255),\r\n    inset 2px 2px 5px rgb(0, 0, 0);\r\n\r\n  @media (max-width: 500px) {\r\n    top: 12%;\r\n    padding: 8px 4px;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  font-size: clamp(22px, 4vw, 36px);\r\n  padding: 16px;\r\n  @media (max-width: 500px) {\r\n    padding: 8px;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: clamp(16px, 3vw, 24px);\r\n  padding: 8px;\r\n  @media (max-width: 500px) {\r\n    padding: 4px;\r\n  }\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { getScoreFromLocalStorage } from \"../../scoreLocalStorage\";\r\nimport { selectTurns } from \"../gameSlice\";\r\nimport { Header, ScoreBoard, Text } from \"./style\";\r\n\r\nexport const Score = () => {\r\n  const turns = useSelector(selectTurns);\r\n\r\n  return (\r\n    <ScoreBoard>\r\n      <Header>Score</Header>\r\n      <Text>current score: {turns}</Text>\r\n      <Header>Your Best Scores</Header>\r\n      <Text>Beginner: {getScoreFromLocalStorage(\"beginner\")}</Text>\r\n      <Text>Advenced: {getScoreFromLocalStorage(\"advanced\")}</Text>\r\n      <Text>Expert: {getScoreFromLocalStorage(\"expert\")}</Text>\r\n    </ScoreBoard>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { MainContent, StyledBoard, Turns } from \"./styled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeStatus,\r\n  resetChoice,\r\n  selectCards,\r\n  selectChoiceOne,\r\n  selectChoiceTwo,\r\n  selectDifficulty,\r\n  selectIsEveryCardMatched,\r\n  selectStatus,\r\n  selectTurns,\r\n  setDisableTrue,\r\n  updateCards,\r\n} from \"../gameSlice\";\r\nimport { SingleCard } from \"../SingleCard\";\r\nimport { Score } from \"../Score\";\r\nimport {\r\n  getScoreFromLocalStorage,\r\n  saveScoreInLocalStorage,\r\n} from \"../../scoreLocalStorage\";\r\n\r\nexport const Board = () => {\r\n  const cards = useSelector(selectCards);\r\n  const turns = useSelector(selectTurns);\r\n  const status = useSelector(selectStatus);\r\n  const difficulty = useSelector(selectDifficulty);\r\n  const choiceOne = useSelector(selectChoiceOne);\r\n  const choiceTwo = useSelector(selectChoiceTwo);\r\n  const isEveryCardMatched = useSelector(selectIsEveryCardMatched);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (choiceOne && choiceTwo) {\r\n      dispatch(setDisableTrue());\r\n      if (choiceOne.src === choiceTwo.src) {\r\n        dispatch(updateCards(choiceOne.src, choiceTwo.src));\r\n        dispatch(resetChoice());\r\n      } else {\r\n        setTimeout(() => {\r\n          dispatch(resetChoice());\r\n        }, 1000);\r\n      }\r\n    }\r\n  }, [dispatch, choiceOne, choiceTwo]);\r\n\r\n  useEffect(() => {\r\n    if (status === \"inGame\" && isEveryCardMatched) {\r\n      dispatch(changeStatus(\"gameOver\"));\r\n      const bestScore = getScoreFromLocalStorage(difficulty);\r\n      if (turns < bestScore || bestScore === \"no score yet\")\r\n        saveScoreInLocalStorage(turns, difficulty);\r\n    }\r\n  }, [dispatch, isEveryCardMatched, status, turns, difficulty]);\r\n\r\n  return (\r\n    <MainContent expert={difficulty === \"expert\"}>\r\n      <Turns>Turn : {turns}</Turns>\r\n      <StyledBoard expert={difficulty === \"expert\"}>\r\n        {status === \"gameOver\" && <Score />}\r\n        {status !== \"chooseDifficulty\" &&\r\n          cards.map((card) => (\r\n            <SingleCard key={card.id} card={card} />\r\n          ))}\r\n      </StyledBoard>\r\n    </MainContent>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ButtonLabel = styled.div`\r\n  width: 200px;\r\n  height: 50px;\r\n  display: block;\r\n  margin: 0 auto 0px;\r\n  padding: 10px;\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  @media (max-width: 500px) {\r\n    transform: scale(0.6);\r\n  }\r\n\r\n  &:hover {\r\n    filter: brightness(120%);\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  position: absolute;\r\n  background-color: darkred;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 20px;\r\n  color: white;\r\n  z-index: -1;\r\n  border: 1px solid darkred;\r\n  box-shadow: 2px 2px 3px rgb(60, 60, 60),\r\n    -2px -2px 3px rgb(255, 150, 150),\r\n    inset -1.5px -1.5px 3px rgb(255, 150, 150),\r\n    inset 1.5px 1.5px 3px rgb(0, 0, 0);\r\n  &:hover {\r\n    box-shadow: 2px 2px 3px rgb(60, 60, 60),\r\n      -2px -2px 3px rgb(255, 150, 150);\r\n  }\r\n  &:active {\r\n    box-shadow: 2px 2px 3px rgb(60, 60, 60),\r\n      -2px -2px 3px rgb(255, 150, 150),\r\n      inset -1.5px -1.5px 3px rgb(255, 150, 150),\r\n      inset 1.5px 1.5px 3px rgb(0, 0, 0);\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  position: absolute;\r\n  width: 50%;\r\n  top: 2%;\r\n  right: 43%;\r\n\r\n  &:nth-child(2) {\r\n    width: 30%;\r\n    right: -5%;\r\n  }\r\n  &:nth-child(3) {\r\n    width: 10%;\r\n    top: 100%;\r\n    right: 20%;\r\n  }\r\n  &:nth-child(4) {\r\n    width: 15%;\r\n    top: 90%;\r\n    right: 28%;\r\n  }\r\n  &:nth-child(5) {\r\n    width: 8%;\r\n    top: 100%;\r\n    right: 40%;\r\n  }\r\n  &:nth-child(6) {\r\n    width: 15%;\r\n    top: 22%;\r\n    right: -5%;\r\n  }\r\n`;\r\n\r\nexport const Difficulty = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: center;\r\n  gap: 40px;\r\n\r\n  @media (max-width: 787px) {\r\n    gap: 60px;\r\n    grid-auto-flow: row;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/snowCap.8c811310.svg\";","export default __webpack_public_path__ + \"static/media/snowCap-2.27d45024.svg\";","export default __webpack_public_path__ + \"static/media/icicle.c28d5e14.svg\";","export default __webpack_public_path__ + \"static/media/sideSnow.813a865f.svg\";","import { ButtonLabel, Image, StyledButton } from \"./styled\";\r\nimport FirstsnowCap from \"./images/snowCap.svg\";\r\nimport SecondSnowCap from \"./images/snowCap-2.svg\";\r\nimport Icecle from \"./images/icicle.svg\";\r\nimport SideSnow from \"./images/sideSnow.svg\";\r\n\r\nexport const Button = ({ type, task, children }) => {\r\n  return (\r\n    <ButtonLabel>\r\n      <Image src={FirstsnowCap} alt=\"Snow\" />\r\n      {(type === \"newGame\" ||\r\n        type === \"advanced\" ||\r\n        type === \"expert\") && (\r\n        <Image src={SecondSnowCap} alt=\"Snow\" />\r\n      )}\r\n      {(type === \"advanced\" || type === \"expert\") && (\r\n        <>\r\n          <Image src={Icecle} alt=\"Icicle\" />\r\n          <Image src={Icecle} alt=\"Icicle\" />\r\n        </>\r\n      )}\r\n      {type === \"expert\" && (\r\n        <>\r\n          <Image src={Icecle} alt=\"Icicle\" />\r\n          <Image src={SideSnow} alt=\"SideSnow\" />\r\n        </>\r\n      )}\r\n      <StyledButton onClick={task}>{children}</StyledButton>\r\n    </ButtonLabel>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Difficulty = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: center;\r\n  gap: 40px;\r\n\r\n  @media (max-width: 787px) {\r\n    gap: 20px;\r\n    grid-auto-flow: row;\r\n  }\r\n`;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectStatus,\r\n  startNewGame,\r\n  changeStatus,\r\n} from \"../gameSlice\";\r\nimport { Button } from \"./Button\";\r\nimport { Difficulty } from \"./styled\";\r\n\r\nexport const Buttons = () => {\r\n  const status = useSelector(selectStatus);\r\n  const dispatch = useDispatch();\r\n  console.log(status);\r\n  return (\r\n    <>\r\n      {status !== \"chooseDifficulty\" && (\r\n        <Button\r\n          type=\"newGame\"\r\n          task={() => dispatch(changeStatus(\"chooseDifficulty\"))}\r\n        >\r\n          New Game\r\n        </Button>\r\n      )}\r\n      {status === \"chooseDifficulty\" && (\r\n        <Difficulty>\r\n          <Button task={() => dispatch(startNewGame(6))}>\r\n            Beginner\r\n          </Button>\r\n          <Button\r\n            type=\"advanced\"\r\n            task={() => dispatch(startNewGame(4))}\r\n          >\r\n            Advanced\r\n          </Button>\r\n          <Button\r\n            type=\"expert\"\r\n            task={() => dispatch(startNewGame(0))}\r\n          >\r\n            Expert\r\n          </Button>\r\n        </Difficulty>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTitle = styled.h1`\r\n  color: red;\r\n  font-size: clamp(22px, 4vw, 36px);\r\n  margin: 0;\r\n  white-space: nowrap;\r\n  padding: 0 8px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  font-size: clamp(22px, 4vw, 36px);\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: center;\r\n  margin-top: 80px;\r\n`;\r\n","import { StyledTitle, Header } from \"./styled\";\r\n\r\nexport const Title = () => (\r\n  <Header>\r\n    🎄 <StyledTitle> Christmas Memory Game </StyledTitle> 🎄\r\n  </Header>\r\n);\r\n","import Snowfall from \"react-snowfall\";\nimport { Board } from \"./components/Board\";\nimport { Buttons } from \"./components/Buttons\";\nimport { Title } from \"./components/Title\";\n\nexport const App = () => {\n  return (\n    <>\n      <Snowfall />\n      <Title />\n      <Board />\n      <Buttons />\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cardsReducer from \"./components/gameSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cards: cardsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./GlobalStyle.js\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}