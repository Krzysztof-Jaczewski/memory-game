{"version":3,"sources":["lights.png","stars.jpg","GlobalStyle.js","components/Board/styled.js","components/SingleCard/images/snowman.png","components/SingleCard/images/candy.png","components/SingleCard/images/cookie.png","components/SingleCard/images/gift.png","components/SingleCard/images/santa.png","components/SingleCard/images/sock.png","components/SingleCard/images/tree.png","components/SingleCard/images/snowflake.png","components/SingleCard/images/cardBack.jpg","components/gameSlice.js","components/SingleCard/styled.js","components/SingleCard/index.js","components/Board/index.js","components/Button/styled.js","components/Button/index.js","components/Title/styled.js","components/Title/index.js","App.js","store.js","index.js"],"names":["GlobalStyle","createGlobalStyle","lights","stars","MainContent","styled","main","StyledBoard","section","Turns","p","gameSlice","createSlice","name","initialState","cards","turns","choiceOne","choiceTwo","disable","cardBack","src","cardImages","snowman","candy","coockie","gift","santa","sock","tree","snowflake","reducers","startNewGame","state","shuffledCards","concat","sort","Math","random","map","card","matched","id","nanoid","handleChoice","payload","resetChoice","updateCards","setDisableTrue","actions","selectCardsState","selectCards","selectTurns","selectCardBack","selectChoiceOne","selectChoiceTwo","selectDisable","selectIsEveryCardMatched","every","StyledCard","div","CardBack","img","flipped","css","CardFront","SingleCard","useSelector","isCardFlipped","selectIsCardFlipped","dispatch","useDispatch","alt","onClick","Board","isEveryCardMatched","useEffect","setTimeout","StyledButton","button","Button","StyledTitle","h1","Header","header","Title","App","store","configureStore","reducer","cardsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16e379b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lights.a9d822ef.png\";","export default __webpack_public_path__ + \"static/media/stars.71437e66.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport lights from \"./lights.png\";\r\nimport stars from \"./stars.jpg\";\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n  margin: 0;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\nbody {\r\n  height: 90vh;\r\n  font-family: 'Lato', sans-serif;\r\n  background-image: url(${lights}), url(${stars});\r\n  background-size: 100% 100%;\r\n  background-attachment: fixed;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainContent = styled.main`\r\n  max-width: 660px;\r\n  margin: 0 auto 40px;\r\n  padding: 0 60px;\r\n`;\r\n\r\nexport const StyledBoard = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 20px;\r\n`;\r\n\r\nexport const Turns = styled.p`\r\n  text-align: center;\r\n  padding: 16px;\r\n  color: lightgreen;\r\n  font-size: 3vh;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/snowman.900c36da.png\";","export default __webpack_public_path__ + \"static/media/candy.4dfc5341.png\";","export default __webpack_public_path__ + \"static/media/cookie.4d8e8970.png\";","export default __webpack_public_path__ + \"static/media/gift.33c31d23.png\";","export default __webpack_public_path__ + \"static/media/santa.d080bc57.png\";","export default __webpack_public_path__ + \"static/media/sock.c3b8f7b1.png\";","export default __webpack_public_path__ + \"static/media/tree.035170c0.png\";","export default __webpack_public_path__ + \"static/media/snowflake.a3d82073.png\";","export default __webpack_public_path__ + \"static/media/cardBack.7852abab.jpg\";","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\r\nimport snowman from \"./SingleCard/images/snowman.png\";\r\nimport candy from \"./SingleCard/images/candy.png\";\r\nimport coockie from \"./SingleCard/images/cookie.png\";\r\nimport gift from \"./SingleCard/images/gift.png\";\r\nimport santa from \"./SingleCard/images/santa.png\";\r\nimport sock from \"./SingleCard/images/sock.png\";\r\nimport tree from \"./SingleCard/images/tree.png\";\r\nimport snowflake from \"./SingleCard/images/snowflake.png\";\r\nimport cardBack from \"./SingleCard/images/cardBack.jpg\";\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"cards\",\r\n  initialState: {\r\n    cards: [],\r\n    turns: 0,\r\n    choiceOne: null,\r\n    choiceTwo: null,\r\n    disable: false,\r\n    cardBack: { src: cardBack },\r\n    cardImages: [\r\n      { src: snowman },\r\n      { src: candy },\r\n      { src: coockie },\r\n      { src: gift },\r\n      { src: santa },\r\n      { src: sock },\r\n      { src: tree },\r\n      { src: snowflake },\r\n    ],\r\n  },\r\n  reducers: {\r\n    startNewGame: (state) => {\r\n      const shuffledCards = state.cardImages\r\n        .concat(state.cardImages)\r\n        .sort(() => Math.random() - 0.5)\r\n        .map((card) => ({\r\n          src: card.src,\r\n          matched: false,\r\n          id: nanoid(),\r\n        }));\r\n\r\n      state.cards = shuffledCards;\r\n      state.turns = 0;\r\n      state.choiceOne = null;\r\n      state.choiceTwo = null;\r\n    },\r\n\r\n    handleChoice: (state, { payload: card }) => {\r\n      state.choiceOne\r\n        ? (state.choiceTwo = card)\r\n        : (state.choiceOne = card);\r\n    },\r\n\r\n    resetChoice: (state) => {\r\n      state.choiceTwo = null;\r\n      state.choiceOne = null;\r\n      state.turns += 1;\r\n      state.disable = false;\r\n    },\r\n\r\n    updateCards: (state, { payload: src }) => {\r\n      state.cards.map((card) => {\r\n        if (card.src === src) return (card.matched = true);\r\n        else return card;\r\n      });\r\n    },\r\n\r\n    setDisableTrue: (state) => {\r\n      state.disable = true;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  startNewGame,\r\n  handleChoice,\r\n  resetChoice,\r\n  updateCards,\r\n  setDisableTrue,\r\n} = gameSlice.actions;\r\n\r\nexport const selectCardsState = (state) => state.cards;\r\nexport const selectCards = (state) => selectCardsState(state).cards;\r\nexport const selectTurns = (state) => selectCardsState(state).turns;\r\nexport const selectCardBack = (state) =>\r\n  selectCardsState(state).cardBack;\r\n\r\nexport const selectChoiceOne = (state) =>\r\n  selectCardsState(state).choiceOne;\r\nexport const selectChoiceTwo = (state) =>\r\n  selectCardsState(state).choiceTwo;\r\n\r\nexport const selectDisable = (state) =>\r\n  selectCardsState(state).disable;\r\n\r\nexport const selectIsCardFlipped = (state, card) => {\r\n  const choiceOne = selectChoiceOne(state);\r\n  const choiceTwo = selectChoiceTwo(state);\r\n\r\n  return card === choiceOne || card === choiceTwo || card.matched;\r\n};\r\nexport const selectIsEveryCardMatched = (state) =>\r\n  selectCards(state).every(({ matched }) => matched);\r\n\r\nexport default gameSlice.reducer;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const CardBack = styled.img`\r\n  width: 100%;\r\n  display: block;\r\n  border: 2px solid white;\r\n  border-radius: 6px;\r\n  background-image: radial-gradient(black, green);\r\n  cursor: pointer;\r\n  transition: all ease-in 0.2s;\r\n  transition-delay: 0.2s;\r\n\r\n  ${({ flipped }) =>\r\n    flipped &&\r\n    css`\r\n      transform: rotateY(90deg);\r\n      transition-delay: 0s;\r\n    `}\r\n`;\r\n\r\nexport const CardFront = styled(CardBack)`\r\n  transform: rotateY(90deg);\r\n  position: absolute;\r\n  transition: all ease-in 0.2s;\r\n  cursor: not-allowed;\r\n\r\n  ${({ flipped }) =>\r\n    flipped &&\r\n    css`\r\n      transform: rotateY(0deg);\r\n      transition-delay: 0.2s;\r\n    `}\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  handleChoice,\r\n  selectCardBack,\r\n  selectDisable,\r\n  selectIsCardFlipped,\r\n} from \"../gameSlice\";\r\nimport { CardFront, CardBack, StyledCard } from \"./styled\";\r\n\r\nexport const SingleCard = ({ card }) => {\r\n  const cardBack = useSelector(selectCardBack);\r\n\r\n  const disable = useSelector(selectDisable);\r\n  const isCardFlipped = useSelector((state) =>\r\n    selectIsCardFlipped(state, card)\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    if (!disable) {\r\n      dispatch(handleChoice(card));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledCard>\r\n      <CardFront\r\n        flipped={isCardFlipped}\r\n        src={card.src}\r\n        alt=\"card front\"\r\n      />\r\n      <CardBack\r\n        flipped={isCardFlipped}\r\n        disable={disable}\r\n        src={cardBack.src}\r\n        alt=\"card back\"\r\n        onClick={handleClick}\r\n      />\r\n    </StyledCard>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { MainContent, StyledBoard, Turns } from \"./styled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  resetChoice,\r\n  selectCards,\r\n  selectChoiceOne,\r\n  selectChoiceTwo,\r\n  selectIsEveryCardMatched,\r\n  selectTurns,\r\n  setDisableTrue,\r\n  updateCards,\r\n} from \"../gameSlice\";\r\nimport { SingleCard } from \"../SingleCard\";\r\n\r\nexport const Board = () => {\r\n  const cards = useSelector(selectCards);\r\n  const turns = useSelector(selectTurns);\r\n  const choiceOne = useSelector(selectChoiceOne);\r\n  const choiceTwo = useSelector(selectChoiceTwo);\r\n  const isEveryCardMatched = useSelector(selectIsEveryCardMatched);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (choiceOne && choiceTwo) {\r\n      dispatch(setDisableTrue());\r\n      if (choiceOne.src === choiceTwo.src) {\r\n        dispatch(updateCards(choiceOne.src));\r\n        dispatch(updateCards(choiceTwo.src));\r\n        dispatch(resetChoice());\r\n      } else {\r\n        setTimeout(() => {\r\n          dispatch(resetChoice());\r\n        }, 1000);\r\n      }\r\n    }\r\n  }, [dispatch, choiceOne, choiceTwo]);\r\n\r\n  return (\r\n    <MainContent>\r\n      <Turns>Turn : {turns}</Turns>\r\n      <StyledBoard>\r\n        {isEveryCardMatched && \"koniec gry\"}\r\n        {!isEveryCardMatched &&\r\n          cards.map((card) => (\r\n            <SingleCard key={card.id} card={card} />\r\n          ))}\r\n      </StyledBoard>\r\n    </MainContent>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n  color: black;\r\n  display: block;\r\n  margin: 0 auto 0px;\r\n  padding: 10px;\r\n`;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { startNewGame } from \"../gameSlice\";\r\nimport { StyledButton } from \"./styled\";\r\n\r\nexport const Button = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <StyledButton onClick={() => dispatch(startNewGame())}>\r\n      New Game\r\n    </StyledButton>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTitle = styled.h1`\r\n  color: lightgreen;\r\n  font-size: 4vw;\r\n  margin: 0;\r\n  white-space: nowrap;\r\n  padding: 0 8px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  font-size: 4vw;\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: center;\r\n  margin-top: 80px;\r\n`;\r\n","import { StyledTitle, Header } from \"./styled\";\r\n\r\nexport const Title = () => (\r\n  <Header>\r\n    🎄 <StyledTitle> Christmas Memory Game </StyledTitle> 🎄\r\n  </Header>\r\n);\r\n","import { Board } from \"./components/Board\";\nimport { Button } from \"./components/Button\";\nimport { Title } from \"./components/Title\";\n\nexport const App = () => {\n  return (\n    <>\n      <Title />\n      <Board />\n      <Button />\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cardsReducer from \"./components/gameSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cards: cardsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./GlobalStyle.js\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}