{"version":3,"sources":["lights.png","GlobalStyle.js","components/Audio/weWishYouMerryChristmas.mp3","components/Audio/styled.js","components/Audio/index.js","components/Board/styled.js","parameters.js","components/SingleCard/images/cardBack.jpg","components/gameSlice.js","components/SingleCard/styled.js","components/SingleCard/index.js","scoreLocalStorage.js","components/Score/style.js","components/Score/index.js","components/Board/index.js","components/Buttons/Button/styled.js","components/Buttons/Button/images/snowCap.svg","components/Buttons/Button/images/snowCap-2.svg","components/Buttons/Button/images/icicle.svg","components/Buttons/Button/images/sideSnow.svg","components/Buttons/Button/index.js","components/Buttons/styled.js","components/SingleCard/images/snowman.png","components/SingleCard/images/candy.png","components/SingleCard/images/cookie.png","components/SingleCard/images/gift.png","components/SingleCard/images/santa.png","components/SingleCard/images/sock.png","components/SingleCard/images/tree.png","components/SingleCard/images/snowflake.png","components/SingleCard/cardsArray.js","components/SingleCard/images/mistletoe.png","components/SingleCard/images/christmasBall.png","components/SingleCard/images/wreath.png","components/SingleCard/images/candle.png","components/Buttons/index.js","components/Title/styled.js","components/Title/index.js","App.js","store.js","index.js"],"names":["GlobalStyle","createGlobalStyle","lights","AudioButton","styled","button","playing","css","Audio","useState","isPlaying","setIsPlaying","onClick","prevState","loop","url","weWishYouMerryChristmas","volume","playStatus","Sound","status","PLAYING","PAUSED","MainContent","main","expert","StyledBoard","section","Turns","p","start","easy","medium","hard","chooseDifficulty","inGame","gameOver","noScore","gameSlice","createSlice","name","initialState","cards","turns","difficulty","choiceOne","choiceTwo","disable","cardBack","src","reducers","setNewGame","state","shuffledCards","payload","changeStatus","newStatus","setDifficulty","chosenDifficulty","handleChoice","card","resetChoice","updateCards","srcOne","srcTwo","forEach","matched","disableCardsClick","actions","selectCardsState","selectCards","selectTurns","selectStatus","selectDifficulty","selectCardBack","selectChoiceOne","selectChoiceTwo","selectDisable","selectIsEveryCardMatched","every","StyledCard","div","CardBack","img","flipped","CardFront","SingleCard","useSelector","isCardFlipped","selectIsCardFlipped","dispatch","useDispatch","alt","getScoreFromLocalStorage","text","JSON","parse","localStorage","getItem","ScoreBoard","Header","header","Text","Score","Board","isEveryCardMatched","useEffect","setTimeout","bestScore","score","setItem","stringify","map","id","ButtonLabel","StyledButton","Image","Button","type","task","children","FirstsnowCap","SecondSnowCap","Icecle","SideSnow","Difficulty","cardsArray","snowman","candy","coockie","gift","santa","sock","tree","snowflake","Buttons","startNewGame","numberShorteningArray","toShuffleArray","slice","sort","Math","random","nanoid","StyledTitle","h1","Title","App","store","configureStore","reducer","cardsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71048d46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lights.a9d822ef.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport lights from \"./lights.png\";\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n  margin: 0;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\nbody {\r\n  height: 90vh;\r\n  font-family: 'Lato', sans-serif;\r\n  background-image: url(${lights}),linear-gradient(180deg, rgba(2,0,36,1) 0%, rgba(0,0,8,1) 84%, rgba(8,8,172,1) 100%, rgba(0,212,255,1) 100%);\r\n  background-size: 100% 100%;\r\n  background-attachment: fixed;\r\n  background-repeat: no-repeat;\r\n}\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/weWishYouMerryChristmas.e8316cfd.mp3\";","import styled, { css } from \"styled-components\";\r\n\r\nexport const AudioButton = styled.button`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 10px;\r\n  padding: 10px;\r\n  border-radius: 20%;\r\n  background-color: green;\r\n\r\n  ${({ playing }) =>\r\n    playing &&\r\n    css`\r\n      background-color: red;\r\n    `}\r\n`;\r\n","import Sound from \"react-sound\";\r\nimport { useState } from \"react\";\r\nimport weWishYouMerryChristmas from \"./weWishYouMerryChristmas.mp3\";\r\nimport { AudioButton } from \"./styled\";\r\n\r\nexport const Audio = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  return (\r\n    <>\r\n      <AudioButton\r\n        playing={isPlaying}\r\n        onClick={() => setIsPlaying((prevState) => !prevState)}\r\n      >\r\n        ⏯\r\n      </AudioButton>\r\n      <Sound\r\n        loop\r\n        url={weWishYouMerryChristmas}\r\n        volume={50}\r\n        playStatus={\r\n          isPlaying ? Sound.status.PLAYING : Sound.status.PAUSED\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const MainContent = styled.main`\r\n  max-width: 660px;\r\n  margin: 0 auto 40px;\r\n  padding: 0 30px;\r\n  z-index: 1;\r\n  ${({ expert }) =>\r\n    expert &&\r\n    css`\r\n      max-width: 1000px;\r\n    `}\r\n`;\r\n\r\nexport const StyledBoard = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 16px;\r\n  position: relative;\r\n  @media (max-width: 667px) {\r\n    gap: 8px;\r\n  }\r\n  ${({ expert }) =>\r\n    expert &&\r\n    css`\r\n      grid-template-columns: repeat(6, 1fr);\r\n      gap: 16px;\r\n    `}\r\n`;\r\n\r\nexport const Turns = styled.p`\r\n  text-align: center;\r\n  padding: 16px;\r\n  color: rgb(255, 0, 0);\r\n  font-size: clamp(22px, 4vw, 36px); ;\r\n`;\r\n","// Button Names\r\nexport const start = \"New Game\";\r\nexport const easy = \"beginner\";\r\nexport const medium = \"advanced\";\r\nexport const hard = \"expert\";\r\n\r\n// Game Progress\r\n\r\nexport const chooseDifficulty = \"chooseDifficulty \";\r\nexport const inGame = \"inGame\";\r\nexport const gameOver = \"gameOver\";\r\n\r\n//Game Title\r\n\r\nexport const gametitle = \"Christmas Memory Game\";\r\n\r\n// Local Storage empty score\r\n\r\nexport const noScore = \"no score yet\";\r\n","export default __webpack_public_path__ + \"static/media/cardBack.7852abab.jpg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { inGame } from \"../parameters\";\r\nimport cardBack from \"./SingleCard/images/cardBack.jpg\";\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"cards\",\r\n  initialState: {\r\n    cards: [],\r\n    turns: 0,\r\n    status: \"initial\",\r\n    difficulty: null,\r\n    choiceOne: null,\r\n    choiceTwo: null,\r\n    disable: false,\r\n    cardBack: { src: cardBack },\r\n  },\r\n  reducers: {\r\n    setNewGame: (state, { payload: shuffledCards }) => {\r\n      state.cards = shuffledCards;\r\n      state.turns = 0;\r\n      state.status = inGame;\r\n      state.choiceOne = null;\r\n      state.choiceTwo = null;\r\n    },\r\n\r\n    changeStatus: (state, { payload: newStatus }) => {\r\n      state.status = newStatus;\r\n    },\r\n\r\n    setDifficulty: (state, { payload: chosenDifficulty }) => {\r\n      state.difficulty = chosenDifficulty;\r\n    },\r\n\r\n    handleChoice: (state, { payload: card }) => {\r\n      state.choiceOne\r\n        ? (state.choiceTwo = card)\r\n        : (state.choiceOne = card);\r\n    },\r\n\r\n    resetChoice: (state) => {\r\n      state.choiceTwo = null;\r\n      state.choiceOne = null;\r\n      state.turns += 1;\r\n      state.disable = false;\r\n    },\r\n\r\n    updateCards: (state, { payload: srcOne, srcTwo }) => {\r\n      state.cards.forEach((card) => {\r\n        if (card.src === srcOne) card.matched = true;\r\n        if (card.src === srcTwo) card.matched = true;\r\n      });\r\n    },\r\n\r\n    disableCardsClick: (state) => {\r\n      state.disable = true;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  setNewGame,\r\n  handleChoice,\r\n  resetChoice,\r\n  updateCards,\r\n  disableCardsClick,\r\n  changeStatus,\r\n  setDifficulty,\r\n} = gameSlice.actions;\r\n\r\nexport const selectCardsState = (state) => state.cards;\r\nexport const selectCards = (state) => selectCardsState(state).cards;\r\nexport const selectTurns = (state) => selectCardsState(state).turns;\r\nexport const selectStatus = (state) => selectCardsState(state).status;\r\nexport const selectDifficulty = (state) =>\r\n  selectCardsState(state).difficulty;\r\nexport const selectCardBack = (state) =>\r\n  selectCardsState(state).cardBack;\r\n\r\nexport const selectChoiceOne = (state) =>\r\n  selectCardsState(state).choiceOne;\r\nexport const selectChoiceTwo = (state) =>\r\n  selectCardsState(state).choiceTwo;\r\n\r\nexport const selectDisable = (state) =>\r\n  selectCardsState(state).disable;\r\n\r\nexport const selectIsCardFlipped = (state, card) => {\r\n  const choiceOne = selectChoiceOne(state);\r\n  const choiceTwo = selectChoiceTwo(state);\r\n\r\n  return card === choiceOne || card === choiceTwo || card.matched;\r\n};\r\nexport const selectIsEveryCardMatched = (state) =>\r\n  selectCards(state).every(({ matched }) => matched);\r\n\r\nexport default gameSlice.reducer;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const CardBack = styled.img`\r\n  width: 100%;\r\n  display: block;\r\n\r\n  border-radius: 6px;\r\n  background-image: radial-gradient(black, green);\r\n  cursor: pointer;\r\n  transition: all ease-in 0.2s;\r\n  transition-delay: 0.2s;\r\n  box-shadow: 2px 2px 3px rgb(60, 60, 60),\r\n    -2px -2px 3px rgb(150, 255, 150),\r\n    inset -1.5px -1.5px 3px rgb(150, 255, 150),\r\n    inset 1.5px 1.5px 3px rgb(0, 0, 0);\r\n\r\n  ${({ flipped }) =>\r\n    flipped &&\r\n    css`\r\n      transform: rotateY(90deg);\r\n      transition-delay: 0s;\r\n    `}\r\n`;\r\n\r\nexport const CardFront = styled(CardBack)`\r\n  transform: rotateY(90deg);\r\n  position: absolute;\r\n  transition: all ease-in 0.2s;\r\n  cursor: not-allowed;\r\n\r\n  ${({ flipped }) =>\r\n    flipped &&\r\n    css`\r\n      transform: rotateY(0deg);\r\n      transition-delay: 0.2s;\r\n    `}\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  handleChoice,\r\n  selectCardBack,\r\n  selectDisable,\r\n  selectIsCardFlipped,\r\n} from \"../gameSlice\";\r\nimport { CardFront, CardBack, StyledCard } from \"./styled\";\r\n\r\nexport const SingleCard = ({ card }) => {\r\n  const cardBack = useSelector(selectCardBack);\r\n\r\n  const disable = useSelector(selectDisable);\r\n  const isCardFlipped = useSelector((state) =>\r\n    selectIsCardFlipped(state, card)\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    if (!disable) {\r\n      dispatch(handleChoice(card));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledCard>\r\n      <CardFront\r\n        flipped={isCardFlipped}\r\n        src={card.src}\r\n        alt=\"card front\"\r\n      />\r\n      <CardBack\r\n        flipped={isCardFlipped}\r\n        disable={disable}\r\n        src={cardBack.src}\r\n        alt=\"card back\"\r\n        onClick={handleClick}\r\n      />\r\n    </StyledCard>\r\n  );\r\n};\r\n","import { noScore } from \"./parameters\";\r\n\r\nexport const saveScoreInLocalStorage = (score, text) =>\r\n  localStorage.setItem(text, JSON.stringify(score));\r\n\r\nexport const getScoreFromLocalStorage = (text) =>\r\n  JSON.parse(localStorage.getItem(text)) || noScore;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ScoreBoard = styled.section`\r\n  position: absolute;\r\n  width: 80%;\r\n  left: 10%;\r\n  top: 10%;\r\n  padding: 16px 8px;\r\n  background-color: rgba(0, 0, 100, 0.9);\r\n  z-index: 1;\r\n  display: grid;\r\n  place-items: center;\r\n  color: red;\r\n  font-weight: bold;\r\n  border-radius: 20px;\r\n  box-shadow: 6px 6px 10px rgb(0, 0, 0),\r\n    -4px -4px 2px rgb(150, 150, 255),\r\n    inset -2px -2px 2px rgb(150, 150, 255),\r\n    inset 2px 2px 5px rgb(0, 0, 0);\r\n\r\n  @media (max-width: 500px) {\r\n    top: 12%;\r\n    padding: 8px 4px;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  font-size: clamp(22px, 4vw, 36px);\r\n  padding: 16px;\r\n  @media (max-width: 500px) {\r\n    padding: 8px;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: clamp(16px, 3vw, 24px);\r\n  padding: 8px;\r\n\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    padding: 4px;\r\n  }\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { easy, hard, medium } from \"../../parameters\";\r\nimport { getScoreFromLocalStorage } from \"../../scoreLocalStorage\";\r\nimport { selectTurns } from \"../gameSlice\";\r\nimport { Header, ScoreBoard, Text } from \"./style\";\r\n\r\nexport const Score = () => {\r\n  const turns = useSelector(selectTurns);\r\n\r\n  return (\r\n    <ScoreBoard>\r\n      <Header>Score</Header>\r\n      <Text>current score: {turns}</Text>\r\n      <Header>Your Best Scores</Header>\r\n      <Text>\r\n        {easy}: {getScoreFromLocalStorage(easy)}\r\n      </Text>\r\n      <Text>\r\n        {medium}: {getScoreFromLocalStorage(medium)}\r\n      </Text>\r\n      <Text>\r\n        {hard}: {getScoreFromLocalStorage(hard)}\r\n      </Text>\r\n    </ScoreBoard>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { MainContent, StyledBoard, Turns } from \"./styled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeStatus,\r\n  resetChoice,\r\n  selectCards,\r\n  selectChoiceOne,\r\n  selectChoiceTwo,\r\n  selectDifficulty,\r\n  selectIsEveryCardMatched,\r\n  selectStatus,\r\n  selectTurns,\r\n  disableCardsClick,\r\n  updateCards,\r\n} from \"../gameSlice\";\r\nimport { SingleCard } from \"../SingleCard\";\r\nimport { Score } from \"../Score\";\r\nimport {\r\n  getScoreFromLocalStorage,\r\n  saveScoreInLocalStorage,\r\n} from \"../../scoreLocalStorage\";\r\nimport {\r\n  chooseDifficulty,\r\n  gameOver,\r\n  hard,\r\n  inGame,\r\n  noScore,\r\n} from \"../../parameters\";\r\n\r\nexport const Board = () => {\r\n  const cards = useSelector(selectCards);\r\n  const turns = useSelector(selectTurns);\r\n  const status = useSelector(selectStatus);\r\n  const difficulty = useSelector(selectDifficulty);\r\n  const choiceOne = useSelector(selectChoiceOne);\r\n  const choiceTwo = useSelector(selectChoiceTwo);\r\n  const isEveryCardMatched = useSelector(selectIsEveryCardMatched);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (choiceOne && choiceTwo) {\r\n      dispatch(disableCardsClick());\r\n      if (choiceOne.src === choiceTwo.src) {\r\n        dispatch(updateCards(choiceOne.src, choiceTwo.src));\r\n        dispatch(resetChoice());\r\n      } else {\r\n        setTimeout(() => {\r\n          dispatch(resetChoice());\r\n        }, 1000);\r\n      }\r\n    }\r\n  }, [dispatch, choiceOne, choiceTwo]);\r\n\r\n  useEffect(() => {\r\n    if (status === inGame && isEveryCardMatched) {\r\n      dispatch(changeStatus(gameOver));\r\n      const bestScore = getScoreFromLocalStorage(difficulty);\r\n      if (turns < bestScore || bestScore === noScore)\r\n        saveScoreInLocalStorage(turns, difficulty);\r\n    }\r\n  }, [dispatch, isEveryCardMatched, status, turns, difficulty]);\r\n\r\n  return (\r\n    <MainContent expert={difficulty === hard}>\r\n      <Turns>Turn : {turns}</Turns>\r\n      <StyledBoard expert={difficulty === hard}>\r\n        {status === gameOver && <Score />}\r\n        {status !== chooseDifficulty &&\r\n          cards.map((card) => (\r\n            <SingleCard key={card.id} card={card} />\r\n          ))}\r\n      </StyledBoard>\r\n    </MainContent>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ButtonLabel = styled.div`\r\n  width: 200px;\r\n  height: 50px;\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  @media (max-width: 787px) {\r\n    transform: scale(0.7);\r\n  }\r\n  @media (max-width: 500px) {\r\n    transform: scale(0.6);\r\n  }\r\n\r\n  &:hover {\r\n    filter: brightness(120%);\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  position: absolute;\r\n  background-color: darkred;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 20px;\r\n  color: white;\r\n  z-index: -1;\r\n  border: 1px solid darkred;\r\n  box-shadow: 2px 2px 3px rgb(60, 60, 60),\r\n    -2px -2px 3px rgb(255, 150, 150), 2px 2px 3px rgb(60, 60, 60),\r\n    -2px -2px 3px rgb(255, 150, 150);\r\n  &:hover {\r\n    filter: brightness(125%);\r\n  }\r\n  &:active {\r\n    box-shadow: 2px 2px 3px rgb(60, 60, 60),\r\n      -2px -2px 3px rgb(255, 150, 150),\r\n      inset -1.5px -1.5px 3px rgb(255, 150, 150),\r\n      inset 1.5px 1.5px 3px rgb(0, 0, 0);\r\n  }\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  position: absolute;\r\n  width: 50%;\r\n  top: 2%;\r\n  right: 43%;\r\n\r\n  &:nth-child(2) {\r\n    width: 30%;\r\n    right: -5%;\r\n  }\r\n  &:nth-child(3) {\r\n    width: 10%;\r\n    top: 100%;\r\n    right: 20%;\r\n  }\r\n  &:nth-child(4) {\r\n    width: 15%;\r\n    top: 90%;\r\n    right: 28%;\r\n  }\r\n  &:nth-child(5) {\r\n    width: 8%;\r\n    top: 100%;\r\n    right: 40%;\r\n  }\r\n  &:nth-child(6) {\r\n    width: 15%;\r\n    top: 22%;\r\n    right: -5%;\r\n  }\r\n`;\r\n\r\nexport const Difficulty = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: center;\r\n  gap: 40px;\r\n\r\n  @media (max-width: 787px) {\r\n    gap: 60px;\r\n    grid-auto-flow: row;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/snowCap.8c811310.svg\";","export default __webpack_public_path__ + \"static/media/snowCap-2.27d45024.svg\";","export default __webpack_public_path__ + \"static/media/icicle.c28d5e14.svg\";","export default __webpack_public_path__ + \"static/media/sideSnow.813a865f.svg\";","import { ButtonLabel, Image, StyledButton } from \"./styled\";\r\nimport FirstsnowCap from \"./images/snowCap.svg\";\r\nimport SecondSnowCap from \"./images/snowCap-2.svg\";\r\nimport Icecle from \"./images/icicle.svg\";\r\nimport SideSnow from \"./images/sideSnow.svg\";\r\nimport { hard, medium, start } from \"../../../parameters\";\r\n\r\nexport const Button = ({ type, task, children }) => {\r\n  return (\r\n    <ButtonLabel>\r\n      <Image src={FirstsnowCap} alt=\"Snow\" />\r\n      {(type === start || type === medium || type === hard) && (\r\n        <Image src={SecondSnowCap} alt=\"Snow\" />\r\n      )}\r\n      {(type === medium || type === hard) && (\r\n        <>\r\n          <Image src={Icecle} alt=\"Icicle\" />\r\n          <Image src={Icecle} alt=\"Icicle\" />\r\n        </>\r\n      )}\r\n      {type === hard && (\r\n        <>\r\n          <Image src={Icecle} alt=\"Icicle\" />\r\n          <Image src={SideSnow} alt=\"SideSnow\" />\r\n        </>\r\n      )}\r\n      <StyledButton onClick={task}>{children}</StyledButton>\r\n    </ButtonLabel>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Difficulty = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: center;\r\n  gap: 40px;\r\n\r\n  @media (max-width: 787px) {\r\n    gap: 20px;\r\n    grid-auto-flow: row;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/snowman.900c36da.png\";","export default __webpack_public_path__ + \"static/media/candy.4dfc5341.png\";","export default __webpack_public_path__ + \"static/media/cookie.4d8e8970.png\";","export default __webpack_public_path__ + \"static/media/gift.33c31d23.png\";","export default __webpack_public_path__ + \"static/media/santa.d080bc57.png\";","export default __webpack_public_path__ + \"static/media/sock.c3b8f7b1.png\";","export default __webpack_public_path__ + \"static/media/tree.035170c0.png\";","export default __webpack_public_path__ + \"static/media/snowflake.a3d82073.png\";","import snowman from \"./images/snowman.png\";\r\nimport candy from \"./images/candy.png\";\r\nimport coockie from \"./images/cookie.png\";\r\nimport gift from \"./images/gift.png\";\r\nimport santa from \"./images/santa.png\";\r\nimport sock from \"./images/sock.png\";\r\nimport tree from \"./images/tree.png\";\r\nimport snowflake from \"./images/snowflake.png\";\r\nimport mistletoe from \"./images/mistletoe.png\";\r\nimport christmasBall from \"./images/christmasBall.png\";\r\nimport wreath from \"./images/wreath.png\";\r\nimport candle from \"./images/candle.png\";\r\n\r\nexport const cardsArray = [\r\n  { src: mistletoe },\r\n  { src: christmasBall },\r\n  { src: wreath },\r\n  { src: candle },\r\n  { src: snowman },\r\n  { src: candy },\r\n  { src: coockie },\r\n  { src: gift },\r\n  { src: santa },\r\n  { src: sock },\r\n  { src: tree },\r\n  { src: snowflake },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/mistletoe.d8f6d9c3.png\";","export default __webpack_public_path__ + \"static/media/christmasBall.093d2654.png\";","export default __webpack_public_path__ + \"static/media/wreath.7bd71d09.png\";","export default __webpack_public_path__ + \"static/media/candle.1637c6b1.png\";","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectStatus,\r\n  setNewGame,\r\n  changeStatus,\r\n  setDifficulty,\r\n} from \"../gameSlice\";\r\nimport { Button } from \"./Button\";\r\nimport { Difficulty } from \"./styled\";\r\nimport { cardsArray } from \"../SingleCard/cardsArray\";\r\nimport {\r\n  chooseDifficulty,\r\n  easy,\r\n  hard,\r\n  medium,\r\n  start,\r\n} from \"../../parameters\";\r\n\r\nexport const Buttons = () => {\r\n  const status = useSelector(selectStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  const startNewGame = (numberShorteningArray) => {\r\n    const toShuffleArray = cardsArray.slice(numberShorteningArray);\r\n    let difficulty = null;\r\n\r\n    const shuffledCards = [...toShuffleArray, ...toShuffleArray]\r\n      .sort(() => Math.random() - 0.5)\r\n      .map((card) => ({\r\n        src: card.src,\r\n        matched: false,\r\n        id: nanoid(),\r\n      }));\r\n\r\n    switch (numberShorteningArray) {\r\n      case 6:\r\n        difficulty = easy;\r\n        break;\r\n      case 4:\r\n        difficulty = medium;\r\n        break;\r\n      default:\r\n        difficulty = hard;\r\n        break;\r\n    }\r\n\r\n    dispatch(setNewGame(shuffledCards));\r\n    dispatch(setDifficulty(difficulty));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {status !== chooseDifficulty && (\r\n        <Button\r\n          type={start}\r\n          task={() => dispatch(changeStatus(chooseDifficulty))}\r\n        >\r\n          {start}\r\n        </Button>\r\n      )}\r\n      {status === chooseDifficulty && (\r\n        <Difficulty>\r\n          <Button task={() => startNewGame(6)}>{easy}</Button>{\" \"}\r\n          <Button type={medium} task={() => startNewGame(4)}>\r\n            {medium}\r\n          </Button>\r\n          <Button type={hard} task={() => startNewGame()}>\r\n            {hard}\r\n          </Button>\r\n        </Difficulty>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTitle = styled.h1`\r\n  color: red;\r\n  font-size: clamp(22px, 4vw, 36px);\r\n  margin: 0;\r\n  white-space: nowrap;\r\n  padding: 0 8px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  font-size: clamp(22px, 4vw, 36px);\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: center;\r\n  margin-top: 80px;\r\n`;\r\n","import { gametitle } from \"../../parameters\";\r\nimport { StyledTitle, Header } from \"./styled\";\r\n\r\nexport const Title = () => (\r\n  <Header>\r\n    🎄 <StyledTitle> {gametitle} </StyledTitle> 🎄\r\n  </Header>\r\n);\r\n","import Snowfall from \"react-snowfall\";\r\nimport { Audio } from \"./components/Audio\";\r\nimport { Board } from \"./components/Board\";\r\nimport { Buttons } from \"./components/Buttons\";\r\nimport { Title } from \"./components/Title\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <>\r\n      <Audio />\r\n      <Snowfall />\r\n      <Title />\r\n      <Board />\r\n      <Buttons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cardsReducer from \"./components/gameSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cards: cardsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./GlobalStyle.js\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}